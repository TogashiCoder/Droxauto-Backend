{
    "openapi": "3.1.0",
    "info": {
        "title": "Droxstock API Documentation",
        "version": "1.0.0",
        "description": "Comprehensive API for managing Daparto parts inventory and user authentication. This API provides endpoints for user management, authentication, and comprehensive inventory management with features like CSV import/export, filtering, and real-time processing."
    },
    "servers": [
        {
            "url": "http://droxstock.test/api"
        }
    ],
    "paths": {
        "/v1/auth/register": {
            "post": {
                "operationId": "auth.register",
                "summary": "Register a new user",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Registration failed"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User registered successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "roles": {
                                                            "type": "string"
                                                        },
                                                        "permissions": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "name",
                                                        "email",
                                                        "roles",
                                                        "permissions"
                                                    ]
                                                },
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "refresh_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Bearer"
                                                    ]
                                                },
                                                "expires_in": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user",
                                                "access_token",
                                                "refresh_token",
                                                "token_type",
                                                "expires_in"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "operationId": "auth.login",
                "summary": "Login user and create token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Login failed"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid credentials"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Login successful"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "roles": {
                                                            "type": "string"
                                                        },
                                                        "permissions": {
                                                            "type": "string"
                                                        },
                                                        "is_admin": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "name",
                                                        "email",
                                                        "roles",
                                                        "permissions",
                                                        "is_admin"
                                                    ]
                                                },
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "refresh_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Bearer"
                                                    ]
                                                },
                                                "expires_in": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user",
                                                "access_token",
                                                "refresh_token",
                                                "token_type",
                                                "expires_in"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Validation failed"
                                            ]
                                        },
                                        "errors": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "errors"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/refresh": {
            "post": {
                "operationId": "auth.refresh",
                "summary": "Refresh user token",
                "tags": [
                    "Auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "refresh_token": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Token refresh failed"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Token refreshed successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "access_token": {
                                                    "type": "string"
                                                },
                                                "refresh_token": {
                                                    "type": "string"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Bearer"
                                                    ]
                                                },
                                                "expires_in": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "access_token",
                                                "refresh_token",
                                                "token_type",
                                                "expires_in"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "user_not_found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Invalid or expired refresh token"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "invalid_refresh_token"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Refresh token is required"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "refresh_token_missing"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "post": {
                "operationId": "auth.logout",
                "summary": "Logout user (revoke token)",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Logout failed"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Successfully logged out"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/auth/me": {
            "get": {
                "operationId": "auth.me",
                "summary": "Get authenticated user info",
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve user information"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User information retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "roles": {
                                                            "type": "string"
                                                        },
                                                        "permissions": {
                                                            "type": "string"
                                                        },
                                                        "is_admin": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "id",
                                                        "name",
                                                        "email",
                                                        "roles",
                                                        "permissions",
                                                        "is_admin"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "user"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/dapartos": {
            "get": {
                "operationId": "dapartos.index",
                "summary": "Display a listing of dapartos",
                "tags": [
                    "Daparto"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve dapartos"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Dapartos retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DapartoCollection"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "operationId": "dapartos.store",
                "summary": "Store a newly created daparto",
                "tags": [
                    "Daparto"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreDapartoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create daparto"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto created successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DapartoResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/dapartos/{dapartoId}": {
            "get": {
                "operationId": "dapartos.show",
                "summary": "Display the specified daparto",
                "tags": [
                    "Daparto"
                ],
                "parameters": [
                    {
                        "name": "dapartoId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Retrieve operation failed"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "An unexpected error occurred while retrieving the part"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "general_error"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Database operation failed"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to retrieve the part due to database error"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "database_error"
                                                    ]
                                                },
                                                "debug_info": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type",
                                                "debug_info"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DapartoResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto not found"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "not_found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "operationId": "dapartos.update",
                "summary": "Update the specified daparto with comprehensive error handling",
                "tags": [
                    "Daparto"
                ],
                "parameters": [
                    {
                        "name": "dapartoId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDapartoRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Handle business logic errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Update failed"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "business_logic_error"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Handle database errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Database operation failed"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "Database error occurred while updating the record"
                                            ]
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "database_error"
                                            ]
                                        },
                                        "debug_info": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type",
                                        "debug_info"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "Return successful update with change details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "changes": {
                                            "type": "string"
                                        },
                                        "unchanged": {
                                            "type": "boolean"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data",
                                        "changes",
                                        "unchanged"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto not found"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "not_found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "operationId": "dapartos.destroy",
                "summary": "Remove the specified daparto",
                "tags": [
                    "Daparto"
                ],
                "parameters": [
                    {
                        "name": "dapartoId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Delete operation failed"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "An unexpected error occurred while deleting the part"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "general_error"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Database operation failed"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to delete the part due to database error"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "database_error"
                                                    ]
                                                },
                                                "debug_info": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type",
                                                "debug_info"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "interne_artikelnummer": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "interne_artikelnummer"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto already deleted"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "This part has already been deleted"
                                            ]
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "already_deleted"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto not found"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "not_found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/dapartos-stats": {
            "get": {
                "operationId": "daparto.stats",
                "summary": "Get daparto statistics",
                "tags": [
                    "Daparto"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve statistics"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Statistics retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "total_count": {
                                                    "type": "string"
                                                },
                                                "active_count": {
                                                    "type": "string"
                                                },
                                                "deleted_count": {
                                                    "type": "string"
                                                },
                                                "total_value": {
                                                    "type": "string"
                                                },
                                                "average_price": {
                                                    "type": "string"
                                                },
                                                "brands_count": {
                                                    "type": "string"
                                                },
                                                "condition_distribution": {
                                                    "type": "object",
                                                    "properties": {
                                                        "excellent": {
                                                            "type": "string"
                                                        },
                                                        "very_good": {
                                                            "type": "string"
                                                        },
                                                        "good": {
                                                            "type": "string"
                                                        },
                                                        "fair": {
                                                            "type": "string"
                                                        },
                                                        "poor": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "excellent",
                                                        "very_good",
                                                        "good",
                                                        "fair",
                                                        "poor"
                                                    ]
                                                },
                                                "price_ranges": {
                                                    "type": "object",
                                                    "properties": {
                                                        "low": {
                                                            "type": "string"
                                                        },
                                                        "medium": {
                                                            "type": "string"
                                                        },
                                                        "high": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "low",
                                                        "medium",
                                                        "high"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "total_count",
                                                "active_count",
                                                "deleted_count",
                                                "total_value",
                                                "average_price",
                                                "brands_count",
                                                "condition_distribution",
                                                "price_ranges"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/dapartos-by-number/{interneArtikelnummer}": {
            "get": {
                "operationId": "daparto.getByNumber",
                "summary": "Get daparto by article number",
                "tags": [
                    "Daparto"
                ],
                "parameters": [
                    {
                        "name": "interneArtikelnummer",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve daparto"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DapartoResource"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto not found"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/dapartos/{dapartoId}/restore": {
            "post": {
                "operationId": "daparto.restore",
                "summary": "Restore a deleted daparto",
                "tags": [
                    "Daparto"
                ],
                "parameters": [
                    {
                        "name": "dapartoId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Restore operation failed"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "An unexpected error occurred while restoring the part"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "general_error"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Database operation failed"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to restore the part due to database error"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "database_error"
                                                    ]
                                                },
                                                "debug_info": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type",
                                                "debug_info"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto restored successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "interne_artikelnummer": {
                                                    "type": "string"
                                                },
                                                "restored_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "interne_artikelnummer",
                                                "restored_at"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto not deleted"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "This part is already active and does not need restoration"
                                            ]
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "not_deleted"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Daparto not found"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "not_found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/csv-job-status/{jobId}": {
            "get": {
                "operationId": "daparto.getCsvJobStatus",
                "summary": "Get CSV job processing status",
                "tags": [
                    "Daparto"
                ],
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve job status"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Job status retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "job_id": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "completed",
                                                        "failed"
                                                    ]
                                                },
                                                "results": {
                                                    "type": "string"
                                                },
                                                "completed_at": {
                                                    "type": "string"
                                                },
                                                "file_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "job_id",
                                                "status",
                                                "results",
                                                "completed_at",
                                                "file_name"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Job not found or expired"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "The job results are no longer available"
                                            ]
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "job_not_found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/dapartos-upload-csv": {
            "post": {
                "operationId": "daparto.uploadCsv",
                "summary": "Upload CSV file for bulk daparto import",
                "tags": [
                    "Daparto"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadCsvRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "CSV processing failed due to system error"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "An unexpected error occurred while processing your CSV file"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "system_error"
                                                    ]
                                                },
                                                "suggestion": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Please try again later. If the problem persists, contact support with file details."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type",
                                                "suggestion"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Database operation failed during CSV processing"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "The CSV data could not be saved due to database constraints"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "database_error"
                                                    ]
                                                },
                                                "suggestion": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Please check your data format and try again. If the problem persists, contact support."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type",
                                                "suggestion"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to queue file for processing"
                                                    ]
                                                },
                                                "error": {
                                                    "type": "string",
                                                    "enum": [
                                                        "The file was uploaded but could not be queued for background processing"
                                                    ]
                                                },
                                                "error_type": {
                                                    "type": "string",
                                                    "enum": [
                                                        "queue_error"
                                                    ]
                                                },
                                                "suggestion": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Please try again or contact support if the problem persists."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error",
                                                "error_type",
                                                "suggestion"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "202": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "CSV file uploaded successfully and queued for background processing"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "file_info": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "size": {
                                                            "type": "string"
                                                        },
                                                        "uploaded_at": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "size",
                                                        "uploaded_at"
                                                    ]
                                                },
                                                "processing_status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "queued"
                                                    ]
                                                },
                                                "estimated_time": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Processing time depends on row count and complexity"
                                                    ]
                                                },
                                                "job_id": {
                                                    "type": "string"
                                                },
                                                "email_notification": {
                                                    "type": "string",
                                                    "enum": [
                                                        "enabled",
                                                        "disabled"
                                                    ]
                                                },
                                                "recommendation": {
                                                    "type": "string",
                                                    "enum": [
                                                        "You will receive an email notification when processing is complete"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "file_info",
                                                "processing_status",
                                                "estimated_time",
                                                "job_id",
                                                "email_notification",
                                                "recommendation"
                                            ]
                                        },
                                        "summary": {
                                            "type": "object",
                                            "properties": {
                                                "file_processed": {
                                                    "type": "string"
                                                },
                                                "processing_mode": {
                                                    "type": "string",
                                                    "enum": [
                                                        "background_job"
                                                    ]
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Queued for processing"
                                                    ]
                                                },
                                                "next_step": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Wait for email notification or check job status"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "file_processed",
                                                "processing_mode",
                                                "status",
                                                "next_step"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data",
                                        "summary"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/dapartos-delete-all": {
            "delete": {
                "operationId": "daparto.deleteAll",
                "summary": "Delete all dapartos",
                "tags": [
                    "Daparto"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete all Daparto data"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "deletion_failed"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "All Daparto data deleted successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "records_deleted": {
                                                    "type": "string"
                                                },
                                                "deleted_at": {
                                                    "type": "string"
                                                },
                                                "deleted_by": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string"
                                                        },
                                                        "user_email": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "user_id",
                                                        "user_email"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "records_deleted",
                                                "deleted_at",
                                                "deleted_by"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "No data to delete"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "The Daparto table is already empty"
                                            ]
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "no_data"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Access denied"
                                            ]
                                        },
                                        "error": {
                                            "type": "string",
                                            "enum": [
                                                "You do not have permission to delete all Daparto data"
                                            ]
                                        },
                                        "error_type": {
                                            "type": "string",
                                            "enum": [
                                                "insufficient_permissions"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error",
                                        "error_type"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/pending-users": {
            "get": {
                "operationId": "pendingUsers.index",
                "summary": "Get all pending user registrations",
                "tags": [
                    "PendingUsers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "pagination": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total",
                                                "from",
                                                "to"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data",
                                        "pagination"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/pending-users/{id}": {
            "get": {
                "operationId": "pendingUsers.show",
                "summary": "Get pending user details",
                "tags": [
                    "PendingUsers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "registration_date": {
                                                    "type": "string"
                                                },
                                                "registration_status": {
                                                    "type": "string"
                                                },
                                                "admin_notes": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "registration_date",
                                                "registration_status",
                                                "admin_notes",
                                                "created_at"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User is not pending approval"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/pending-users/{id}/approve": {
            "post": {
                "operationId": "pendingUsers.approve",
                "summary": "Approve user registration",
                "tags": [
                    "PendingUsers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApproveUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to approve user registration"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User registration approved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "approved"
                                                    ]
                                                },
                                                "approved_at": {
                                                    "type": "string"
                                                },
                                                "assigned_role": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "status",
                                                "approved_at",
                                                "assigned_role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User is not pending approval"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/pending-users/{id}/reject": {
            "post": {
                "operationId": "pendingUsers.reject",
                "summary": "Reject user registration",
                "tags": [
                    "PendingUsers"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RejectUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to reject user registration"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User registration rejected and account deleted"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "rejected"
                                                    ]
                                                },
                                                "rejected_at": {
                                                    "type": "string"
                                                },
                                                "rejection_reason": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "status",
                                                "rejected_at",
                                                "rejection_reason"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User is not pending approval"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/pending-users-statistics": {
            "get": {
                "operationId": "pendingUsers.statistics",
                "summary": "Get pending users statistics",
                "tags": [
                    "PendingUsers"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "total_pending": {
                                                    "type": "string"
                                                },
                                                "total_approved_today": {
                                                    "type": "string"
                                                },
                                                "total_rejected_today": {
                                                    "type": "string"
                                                },
                                                "pending_by_date": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "total_pending",
                                                "total_approved_today",
                                                "total_rejected_today",
                                                "pending_by_date"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/permissions/statistics": {
            "get": {
                "operationId": "permission.statistics",
                "summary": "Get permission statistics",
                "tags": [
                    "Permission"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve permission statistics"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission statistics retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/permissions/{id}/clone": {
            "post": {
                "operationId": "permission.clone",
                "summary": "Clone a permission",
                "tags": [
                    "Permission"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to clone permission"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission cloned successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "permission": {
                                                    "$ref": "#/components/schemas/PermissionResource"
                                                }
                                            },
                                            "required": [
                                                "permission"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/permissions": {
            "get": {
                "operationId": "v1.admin.permissions.index",
                "summary": "Display a listing of permissions",
                "tags": [
                    "Permission"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve permissions"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permissions retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "permissions": {
                                                    "type": "string"
                                                },
                                                "pagination": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "string"
                                                        },
                                                        "last_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        },
                                                        "total": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "current_page",
                                                        "last_page",
                                                        "per_page",
                                                        "total"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "permissions",
                                                "pagination"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "operationId": "v1.admin.permissions.store",
                "summary": "Store a newly created permission",
                "tags": [
                    "Permission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePermissionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create permission"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission created successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "permission": {
                                                    "$ref": "#/components/schemas/PermissionResource"
                                                }
                                            },
                                            "required": [
                                                "permission"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/permissions/{id}": {
            "get": {
                "operationId": "v1.admin.permissions.show",
                "summary": "Display the specified permission",
                "tags": [
                    "Permission"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve permission"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "permission": {
                                                    "$ref": "#/components/schemas/PermissionResource"
                                                }
                                            },
                                            "required": [
                                                "permission"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "operationId": "v1.admin.permissions.update",
                "summary": "Update the specified permission",
                "tags": [
                    "Permission"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "description": {
                                        "type": [
                                            "string",
                                            "null"
                                        ],
                                        "maxLength": 1000
                                    }
                                },
                                "required": [
                                    "name"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update permission"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "permission": {
                                                    "$ref": "#/components/schemas/PermissionResource"
                                                }
                                            },
                                            "required": [
                                                "permission"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "operationId": "v1.admin.permissions.destroy",
                "summary": "Remove the specified permission",
                "tags": [
                    "Permission"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to delete permission"
                                                    ]
                                                },
                                                "error": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "error"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Failed to delete permission"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Cannot delete permission with assigned roles"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Cannot delete system permissions"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/roles": {
            "get": {
                "operationId": "v1.admin.roles.index",
                "summary": "Display a listing of roles with pagination and caching",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "name"
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": "asc"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve roles"
                                            ]
                                        },
                                        "error": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "Internal server error"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Roles retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "roles": {
                                                    "type": "string"
                                                },
                                                "pagination": {
                                                    "type": "object",
                                                    "properties": {
                                                        "current_page": {
                                                            "type": "string"
                                                        },
                                                        "per_page": {
                                                            "type": "string"
                                                        },
                                                        "total": {
                                                            "type": "string"
                                                        },
                                                        "last_page": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "current_page",
                                                        "per_page",
                                                        "total",
                                                        "last_page"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "roles",
                                                "pagination"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "operationId": "v1.admin.roles.store",
                "summary": "Store a newly created role",
                "tags": [
                    "Role"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create role"
                                            ]
                                        },
                                        "error": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "Internal server error"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role created successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "role": {
                                                    "$ref": "#/components/schemas/RoleResource"
                                                }
                                            },
                                            "required": [
                                                "role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/roles/{id}": {
            "get": {
                "operationId": "v1.admin.roles.show",
                "summary": "Display the specified role",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve role"
                                            ]
                                        },
                                        "error": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "Internal server error"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "role": {
                                                    "$ref": "#/components/schemas/RoleResource"
                                                }
                                            },
                                            "required": [
                                                "role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "operationId": "v1.admin.roles.update",
                "summary": "Update the specified role",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRoleRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update role"
                                            ]
                                        },
                                        "error": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "Internal server error"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "role": {
                                                    "$ref": "#/components/schemas/RoleResource"
                                                }
                                            },
                                            "required": [
                                                "role"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "operationId": "v1.admin.roles.destroy",
                "summary": "Remove the specified role",
                "tags": [
                    "Role"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete role"
                                            ]
                                        },
                                        "error": {
                                            "anyOf": [
                                                {
                                                    "type": "string"
                                                },
                                                {
                                                    "type": "string",
                                                    "enum": [
                                                        "Internal server error"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Cannot delete role with assigned users"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Cannot delete system roles"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/roles/assign-permission": {
            "post": {
                "operationId": "rolePermission.assignPermission",
                "summary": "Assign a permission to a role",
                "tags": [
                    "RolePermission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "role_id": {
                                        "type": "integer"
                                    },
                                    "permission_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "role_id",
                                    "permission_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to assign permission"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "Role already has this permission, return success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Permission assigned to role successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "role_id": {
                                                            "type": "string"
                                                        },
                                                        "permission_id": {
                                                            "type": "string"
                                                        },
                                                        "permission_name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "role_id",
                                                        "permission_id",
                                                        "permission_name"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Permission assigned to role successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "role_id": {
                                                            "type": "string"
                                                        },
                                                        "permission_id": {
                                                            "type": "string"
                                                        },
                                                        "permission_name": {
                                                            "type": "string"
                                                        },
                                                        "note": {
                                                            "type": "string",
                                                            "enum": [
                                                                "Role already had this permission"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "role_id",
                                                        "permission_id",
                                                        "permission_name",
                                                        "note"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Permission not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Role not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/roles/assign-multiple-permissions": {
            "post": {
                "operationId": "rolePermission.assignMultiplePermissions",
                "summary": "Assign multiple permissions to a role",
                "tags": [
                    "RolePermission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "role_id": {
                                        "type": "integer"
                                    },
                                    "permission_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "role_id",
                                    "permission_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to assign permissions"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Multiple permissions assigned to role successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "role_id": {
                                                    "type": "string"
                                                },
                                                "assigned_permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                },
                                                "already_assigned": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "role_id",
                                                "assigned_permissions",
                                                "already_assigned"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "One or more permissions not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Role not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/roles/remove-permission": {
            "post": {
                "operationId": "rolePermission.removePermission",
                "summary": "Remove a permission from a role",
                "tags": [
                    "RolePermission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "role_id": {
                                        "type": "integer"
                                    },
                                    "permission_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "role_id",
                                    "permission_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to remove permission"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission removed from role successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "role_id": {
                                                    "type": "string"
                                                },
                                                "permission_id": {
                                                    "type": "string"
                                                },
                                                "permission_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "role_id",
                                                "permission_id",
                                                "permission_name"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Permission not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Role not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/roles/remove-all-permissions": {
            "post": {
                "operationId": "rolePermission.removeAllPermissions",
                "summary": "Remove all permissions from a role",
                "tags": [
                    "RolePermission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "role_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "role_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to remove all permissions"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "All permissions removed from role successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "role_id": {
                                                    "type": "string"
                                                },
                                                "removed_permissions_count": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "role_id",
                                                "removed_permissions_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users": {
            "get": {
                "operationId": "userManagement.index",
                "summary": "List all users with pagination and filtering",
                "tags": [
                    "UserManagement"
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve users"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Users retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "data": {
                                                    "type": "string"
                                                },
                                                "current_page": {
                                                    "type": "string"
                                                },
                                                "last_page": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "string"
                                                },
                                                "total": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "data",
                                                "current_page",
                                                "last_page",
                                                "per_page",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "operationId": "userManagement.store",
                "summary": "Create new user",
                "tags": [
                    "UserManagement"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to create user"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User created successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "roles": {
                                                    "type": "string"
                                                },
                                                "permissions": {
                                                    "type": "string"
                                                },
                                                "is_admin": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "roles",
                                                "permissions",
                                                "is_admin",
                                                "created_at"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/{userId}": {
            "get": {
                "operationId": "userManagement.show",
                "summary": "Get specific user details",
                "tags": [
                    "UserManagement"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve user"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "roles": {
                                                    "type": "string"
                                                },
                                                "permissions": {
                                                    "type": "string"
                                                },
                                                "is_admin": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "roles",
                                                "permissions",
                                                "is_admin",
                                                "created_at",
                                                "updated_at"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "operationId": "userManagement.update",
                "summary": "Update user information",
                "tags": [
                    "UserManagement"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update user"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "updated_at"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "operationId": "userManagement.destroy",
                "summary": "Delete user",
                "tags": [
                    "UserManagement"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete user"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User deleted successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Cannot delete your own account"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/{userId}/roles": {
            "get": {
                "operationId": "userManagement.getUserRoles",
                "summary": "Get user roles",
                "tags": [
                    "UserManagement"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve user roles"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User roles retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "roles": {
                                                    "type": "string"
                                                },
                                                "permissions": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "email",
                                                "roles",
                                                "permissions"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "operationId": "userManagement.updateUserRoles",
                "summary": "Update user roles",
                "tags": [
                    "UserManagement"
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "roles": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "roles"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to update user roles"
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User roles updated successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "roles": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "id",
                                                "name",
                                                "roles"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/assign-permission": {
            "post": {
                "operationId": "userPermission.assignPermission",
                "summary": "Assign a permission directly to a user",
                "tags": [
                    "UserPermission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "permission_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "permission_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to assign permission"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "User already has this permission, return success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Permission assigned to user successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string"
                                                        },
                                                        "permission_id": {
                                                            "type": "string"
                                                        },
                                                        "permission_name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "user_id",
                                                        "permission_id",
                                                        "permission_name"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Permission assigned to user successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string"
                                                        },
                                                        "permission_id": {
                                                            "type": "string"
                                                        },
                                                        "permission_name": {
                                                            "type": "string"
                                                        },
                                                        "note": {
                                                            "type": "string",
                                                            "enum": [
                                                                "User already had this permission directly"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "user_id",
                                                        "permission_id",
                                                        "permission_name",
                                                        "note"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Permission not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/assign-multiple-permissions": {
            "post": {
                "operationId": "userPermission.assignMultiplePermissions",
                "summary": "Assign multiple permissions directly to a user",
                "tags": [
                    "UserPermission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "permission_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "permission_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to assign permissions"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Multiple permissions assigned to user successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "assigned_permissions": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                },
                                                "already_assigned": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "assigned_permissions",
                                                "already_assigned"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "One or more permissions not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/remove-permission": {
            "post": {
                "operationId": "userPermission.removePermission",
                "summary": "Remove a permission directly from a user",
                "tags": [
                    "UserPermission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "permission_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "permission_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to remove permission"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Permission removed from user successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "permission_id": {
                                                    "type": "string"
                                                },
                                                "permission_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "permission_id",
                                                "permission_name"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Permission not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/remove-all-permissions": {
            "post": {
                "operationId": "userPermission.removeAllPermissions",
                "summary": "Remove all permissions directly from a user",
                "tags": [
                    "UserPermission"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to remove all permissions"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "All permissions removed from user successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "removed_permissions_count": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "removed_permissions_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/register/user": {
            "post": {
                "operationId": "userRegistration.register",
                "summary": "Register a new user (requires admin approval)",
                "tags": [
                    "UserRegistration"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Registration failed. Please try again."
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Registration successful! Your account is pending admin approval. You will receive an email once approved."
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "enum": [
                                                        "pending"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "email",
                                                "status"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/register/status": {
            "get": {
                "operationId": "userRegistration.checkStatus",
                "summary": "Get registration status",
                "tags": [
                    "UserRegistration"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "status": {
                                                    "type": "string"
                                                },
                                                "is_active": {
                                                    "type": "string"
                                                },
                                                "admin_notes": {
                                                    "type": "string"
                                                },
                                                "registration_date": {
                                                    "type": "string"
                                                },
                                                "approved_at": {
                                                    "type": "string"
                                                },
                                                "rejected_at": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "status",
                                                "is_active",
                                                "admin_notes",
                                                "registration_date",
                                                "approved_at",
                                                "rejected_at"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/register/resend-verification": {
            "post": {
                "operationId": "userRegistration.resendVerification",
                "summary": "Resend verification email",
                "tags": [
                    "UserRegistration"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Verification email sent successfully"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Account already approved"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/v1/admin/users/assign-role": {
            "post": {
                "operationId": "userRole.assignRole",
                "summary": "Assign a role to a user",
                "tags": [
                    "UserRole"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "role_id": {
                                        "type": "integer"
                                    },
                                    "guard_name": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "role_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to assign role"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "User already has this role, return success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Role assigned to user successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string"
                                                        },
                                                        "role_id": {
                                                            "type": "string"
                                                        },
                                                        "role_name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "user_id",
                                                        "role_id",
                                                        "role_name"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Role assigned to user successfully"
                                                    ]
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "properties": {
                                                        "user_id": {
                                                            "type": "string"
                                                        },
                                                        "role_id": {
                                                            "type": "string"
                                                        },
                                                        "role_name": {
                                                            "type": "string"
                                                        },
                                                        "note": {
                                                            "type": "string",
                                                            "enum": [
                                                                "User already had this role"
                                                            ]
                                                        }
                                                    },
                                                    "required": [
                                                        "user_id",
                                                        "role_id",
                                                        "role_name",
                                                        "note"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message",
                                                "data"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Role not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/assign-multiple-roles": {
            "post": {
                "operationId": "userRole.assignMultipleRoles",
                "summary": "Assign multiple roles to a user",
                "tags": [
                    "UserRole"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "role_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "minItems": 1
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "role_ids"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to assign roles"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Multiple roles assigned to user successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "assigned_roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                },
                                                "already_assigned": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "minItems": 0,
                                                    "maxItems": 0,
                                                    "additionalItems": false
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "assigned_roles",
                                                "already_assigned"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "One or more roles not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/remove-role": {
            "post": {
                "operationId": "userRole.removeRole",
                "summary": "Remove a role from a user",
                "tags": [
                    "UserRole"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "role_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "user_id",
                                    "role_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to remove role"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Role removed from user successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "role_id": {
                                                    "type": "string"
                                                },
                                                "role_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "role_id",
                                                "role_name"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Role not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "User not found"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "success",
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/remove-all-roles": {
            "post": {
                "operationId": "userRole.removeAllRoles",
                "summary": "Remove all roles from a user",
                "tags": [
                    "UserRole"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "user_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to remove all roles"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "All roles removed from user successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "removed_roles_count": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "removed_roles_count"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/v1/admin/users/{id}/permissions": {
            "get": {
                "operationId": "userRole.getUserPermissions",
                "summary": "Get user permissions (including those from roles)",
                "tags": [
                    "UserRole"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to retrieve user permissions"
                                            ]
                                        },
                                        "error": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User permissions retrieved successfully"
                                            ]
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "string"
                                                },
                                                "user_name": {
                                                    "type": "string"
                                                },
                                                "roles": {
                                                    "type": "string"
                                                },
                                                "direct_permissions": {
                                                    "type": "string"
                                                },
                                                "all_permissions": {
                                                    "type": "string"
                                                }
                                            },
                                            "required": [
                                                "user_id",
                                                "user_name",
                                                "roles",
                                                "direct_permissions",
                                                "all_permissions"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message",
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "User not found"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "success",
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "ApproveUserRequest": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "admin_notes": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    }
                },
                "title": "ApproveUserRequest"
            },
            "CreatePermissionRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "guard_name": {
                        "type": "string",
                        "enum": [
                            "api",
                            "web"
                        ],
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    }
                },
                "required": [
                    "name"
                ],
                "title": "CreatePermissionRequest"
            },
            "CreateRoleRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "guard_name": {
                        "type": "string",
                        "enum": [
                            "api",
                            "web"
                        ],
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    },
                    "permissions": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "title": "CreateRoleRequest"
            },
            "DapartoCollection": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DapartoResource"
                        }
                    },
                    "pagination": {
                        "type": "object",
                        "properties": {
                            "current_page": {
                                "type": "string"
                            },
                            "last_page": {
                                "type": "string"
                            },
                            "per_page": {
                                "type": "string"
                            },
                            "total": {
                                "type": "string"
                            },
                            "from": {
                                "type": "string"
                            },
                            "to": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "current_page",
                            "last_page",
                            "per_page",
                            "total",
                            "from",
                            "to"
                        ]
                    }
                },
                "required": [
                    "data",
                    "pagination"
                ],
                "title": "DapartoCollection"
            },
            "DapartoResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "tiltle": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "teilemarke_teilenummer": {
                        "type": "string"
                    },
                    "preis": {
                        "type": "string"
                    },
                    "interne_artikelnummer": {
                        "type": "string"
                    },
                    "zustand": {
                        "type": "integer"
                    },
                    "pfand": {
                        "type": "integer"
                    },
                    "versandklasse": {
                        "type": "integer"
                    },
                    "lieferzeit": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "tiltle",
                    "teilemarke_teilenummer",
                    "preis",
                    "interne_artikelnummer",
                    "zustand",
                    "pfand",
                    "versandklasse",
                    "lieferzeit",
                    "created_at",
                    "updated_at",
                    "deleted_at"
                ],
                "title": "DapartoResource"
            },
            "PermissionResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "guard_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "roles_count": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "is_system_permission": {
                        "type": "boolean",
                        "description": "Additional computed fields"
                    },
                    "can_be_deleted": {
                        "type": "boolean"
                    },
                    "can_be_modified": {
                        "type": "boolean"
                    },
                    "links": {
                        "type": "object",
                        "description": "Links for API navigation",
                        "properties": {
                            "self": {
                                "type": "string"
                            },
                            "edit": {
                                "type": "string"
                            },
                            "delete": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "self",
                            "edit",
                            "delete"
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "guard_name",
                    "description",
                    "links"
                ],
                "title": "PermissionResource"
            },
            "RegisterUserRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 255
                    },
                    "password": {
                        "type": "string"
                    },
                    "password_confirmation": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "title": "RegisterUserRequest"
            },
            "RejectUserRequest": {
                "type": "object",
                "properties": {
                    "rejection_reason": {
                        "type": "string",
                        "maxLength": 1000
                    }
                },
                "required": [
                    "rejection_reason"
                ],
                "title": "RejectUserRequest"
            },
            "RoleResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "guard_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "permissions_count": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PermissionResource"
                        }
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "updated_at": {
                        "type": "string"
                    },
                    "is_system_role": {
                        "type": "string",
                        "description": "Additional computed fields"
                    },
                    "can_be_deleted": {
                        "type": "boolean"
                    },
                    "can_be_modified": {
                        "type": "boolean"
                    },
                    "links": {
                        "type": "object",
                        "description": "Links for API navigation",
                        "properties": {
                            "self": {
                                "type": "string"
                            },
                            "edit": {
                                "type": "string"
                            },
                            "delete": {
                                "type": "string"
                            },
                            "permissions": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "self",
                            "edit",
                            "delete",
                            "permissions"
                        ]
                    }
                },
                "required": [
                    "id",
                    "name",
                    "guard_name",
                    "description",
                    "permissions_count",
                    "links"
                ],
                "title": "RoleResource"
            },
            "StoreDapartoRequest": {
                "type": "object",
                "properties": {
                    "tiltle": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "teilemarke_teilenummer": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "preis": {
                        "type": "number",
                        "minimum": 0,
                        "maximum": 999999.99
                    },
                    "interne_artikelnummer": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "zustand": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 5
                    },
                    "pfand": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 1000
                    },
                    "versandklasse": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                    },
                    "lieferzeit": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 365
                    }
                },
                "required": [
                    "teilemarke_teilenummer",
                    "preis",
                    "interne_artikelnummer",
                    "zustand",
                    "pfand",
                    "versandklasse",
                    "lieferzeit"
                ],
                "title": "StoreDapartoRequest"
            },
            "UpdateDapartoRequest": {
                "type": "object",
                "properties": {
                    "tiltle": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "teilemarke_teilenummer": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "preis": {
                        "type": [
                            "number",
                            "null"
                        ],
                        "minimum": 0.01
                    },
                    "interne_artikelnummer": {
                        "type": "string"
                    },
                    "zustand": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "description": "Cannot be changed",
                        "minimum": 0,
                        "maximum": 5
                    },
                    "pfand": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 0
                    },
                    "versandklasse": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 1,
                        "maximum": 5
                    },
                    "lieferzeit": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 1
                    }
                },
                "title": "UpdateDapartoRequest"
            },
            "UpdateRoleRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    },
                    "permissions": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "name"
                ],
                "title": "UpdateRoleRequest"
            },
            "UploadCsvRequest": {
                "type": "object",
                "properties": {
                    "csv_file": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream",
                        "maxLength": 51200
                    },
                    "validation_mode": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "enum": [
                            "strict",
                            "flexible",
                            "skip_errors"
                        ]
                    },
                    "update_existing": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "skip_duplicates": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "batch_size": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "minimum": 100,
                        "maximum": 10000
                    },
                    "email_notification": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "user_email": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "email"
                    }
                },
                "required": [
                    "csv_file"
                ],
                "title": "UploadCsvRequest"
            }
        },
        "responses": {
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}